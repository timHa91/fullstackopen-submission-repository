{"ast":null,"code":"var _jsxFileName = \"/Users/timhartmann/Desktop/fullstackopen-submission-repository/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const incrementGood = () => setGood(good + 1);\n\n  const incrementNeutral = () => setNeutral(neutral + 1);\n\n  const incrementBad = () => setBad(bad + 1);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: incrementGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: incrementNeutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: incrementBad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c = App;\n\nconst Button = _ref => {\n  let {\n    handleClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 43\n  }, this);\n};\n\n_c2 = Button;\n\nconst Statistics = _ref2 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref2;\n  const all = good + neutral + bad;\n  let positive = 0;\n  let average = 0;\n  const statisticHeader = \"statistics\";\n\n  if (all > 0) {\n    positive = good / all * 100;\n    average = (good - bad) / all;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: statisticHeader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n            text: \"good\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n            value: good\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), \"\\xA5\\xA5\", /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(StatisticLine, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: statisticHeader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"no feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c3 = Statistics;\n\nconst StatisticLine = _ref3 => {\n  let {\n    text,\n    value\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [text, \" \", value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 42\n  }, this);\n};\n\n_c4 = StatisticLine;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"StatisticLine\");","map":{"version":3,"sources":["/Users/timhartmann/Desktop/fullstackopen-submission-repository/part1/unicafe/src/App.js"],"names":["useState","App","good","setGood","neutral","setNeutral","bad","setBad","incrementGood","incrementNeutral","incrementBad","Button","handleClick","text","Statistics","all","positive","average","statisticHeader","StatisticLine","value"],"mappings":"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","sourcesContent":["import { useState } from 'react'\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const incrementGood = () => setGood(good + 1);\n  const incrementNeutral = () => setNeutral(neutral + 1);\n  const incrementBad = () => setBad(bad + 1);\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button handleClick={incrementGood} text={\"good\"} />\n      <Button handleClick={incrementNeutral} text={\"neutral\"} />\n      <Button handleClick={incrementBad} text={\"bad\"} />\n      <Statistics good={good} neutral={neutral} bad={bad} />\n    </div>\n  )\n}\n\nconst Button = ({ handleClick, text }) => <button onClick={handleClick}>{text}</button>\n\nconst Statistics = ({good, neutral, bad}) => {\n  const all = good + neutral + bad\n  let positive = 0;\n  let average = 0;\n  const statisticHeader = \"statistics\"\n\n  if (all > 0) {\n    positive = (good / all) * 100\n    average = (good - bad) / all\n\n    return (\n      <div>\n        <h1>{statisticHeader}</h1>\n        <tr>\n          <td><StatisticLine text=\"good\" /></td>\n          <td><StatisticLine value={good}/></td>\n          <td></td>¥¥\n          <td></td>\n          <td></td>\n          <td></td>\n        </tr>\n        <tr>\n          <td><StatisticLine   /></td>\n          <td></td>\n          <td></td>\n          <td></td>\n          <td></td>\n          <td></td>\n        </tr>\n        {/* <StatisticLine text=\"neutral\" value={neutral} />\n        <StatisticLine text=\"bad\" value={bad} />\n        <StatisticLine text=\"all\" value={all} />\n        <StatisticLine text=\"average\" value={average} />\n        <StatisticLine text=\"positive\" value={positive} /> */}\n      </div>\n    )\n  }\n  else {\n    return (\n      <div>\n        <h1>{statisticHeader}</h1>\n        <StatisticLine text=\"no feedback given\" />\n      </div>\n    )\n  }\n}\n\nconst StatisticLine = ({text, value}) => <p>{text} {value}</p>\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}