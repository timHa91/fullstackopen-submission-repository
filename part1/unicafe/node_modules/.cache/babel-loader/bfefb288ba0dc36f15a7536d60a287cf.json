{"ast":null,"code":"var _jsxFileName = \"/Users/timhartmann/Desktop/fullstackopen-submission-repository/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = _ref => {\n  let {\n    onClick,\n    text\n  } = _ref;\n\n  /*#__PURE__*/\n  _jsxDEV(Button, {\n    onClick: onClick(),\n    children: \"text\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Button;\n\nconst Statistics = props => {\n  /*#__PURE__*/\n  _jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", props.good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", props.neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"bad \", props.good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const incrementGood = () => {\n    setGood(good + 1);\n  };\n\n  const incrementNeutral = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const incrementBad = () => {\n    setBad(bad + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: incrementGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: incrementGood,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: incrementGood,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/timhartmann/Desktop/fullstackopen-submission-repository/part1/unicafe/src/App.js"],"names":["useState","Button","onClick","text","Statistics","props","good","neutral","App","setGood","setNeutral","bad","setBad","incrementGood","incrementNeutral","incrementBad"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,MAAM,GAAG,QAAuB;AAAA,MAAtB;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAsB;;AACpC;AAAA,UAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,OAAO,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,CAFD;;KAAMD,M;;AAIN,MAAMG,UAAU,GAAIC,KAAD,IAAW;AAC5B;AAAA;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,0BAASA,KAAK,CAACC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,6BAAYD,KAAK,CAACE,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,yBAAQF,KAAK,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAMD,CAPD;;MAAMF,U;;AASN,MAAMI,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACF,IAAD,EAAOG,OAAP,IAAkBT,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUG,UAAV,IAAwBV,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,CAAD,CAA9B;;AAEA,QAAMa,aAAa,GAAG,MAAM;AAC1BJ,IAAAA,OAAO,CAACH,IAAI,GAAG,CAAR,CAAP;AACD,GAFD;;AAGA,QAAMQ,gBAAgB,GAAG,MAAM;AAC7BJ,IAAAA,UAAU,CAACH,OAAO,GAAG,CAAX,CAAV;AACD,GAFD;;AAGA,QAAMQ,YAAY,GAAG,MAAM;AACzBH,IAAAA,MAAM,CAACD,GAAG,GAAG,CAAP,CAAN;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEE,aAAjB;AAAgC,MAAA,IAAI,EAAE;AAAtC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEA,aAAjB;AAAgC,MAAA,IAAI,EAAE;AAAtC;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEA,aAAjB;AAAgC,MAAA,IAAI,EAAE;AAAtC;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAxBD;;GAAML,G;;MAAAA,G;AA0BN,eAAeA,GAAf","sourcesContent":["import { useState } from 'react'\n\nconst Button = ({ onClick, text }) => {\n  <Button onClick={onClick()}>text</Button>\n}\n\nconst Statistics = (props) => {\n  <div>\n    <h1>statistics</h1>\n    <p>good {props.good}</p>\n    <p>neutral {props.neutral}</p>\n    <p>bad {props.good}</p>\n  </div>\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const incrementGood = () => {\n    setGood(good + 1);\n  }\n  const incrementNeutral = () => {\n    setNeutral(neutral + 1);\n  }\n  const incrementBad = () => {\n    setBad(bad + 1);\n  }\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button onClick={incrementGood} text={\"good\"} />\n      <Button onClick={incrementGood} text={\"neutral\"} />\n      <Button onClick={incrementGood} text={\"bad\"} />\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}